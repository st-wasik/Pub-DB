//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PubDBApplication.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PubDBEntities : DbContext
    {
        public PubDBEntities()
            : base("name=PubDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<OrderDetails> OrderDetails { get; set; }
        public virtual DbSet<Orders> Orders { get; set; }
        public virtual DbSet<Products> Products { get; set; }
        public virtual DbSet<Pubs> Pubs { get; set; }
        public virtual DbSet<Warehouses> Warehouses { get; set; }
        public virtual DbSet<WarehousesStock> WarehousesStock { get; set; }
        public virtual DbSet<ProducersView> ProducersView { get; set; }
        public virtual DbSet<ProductsView> ProductsView { get; set; }
        public virtual DbSet<PubsView> PubsView { get; set; }
        public virtual DbSet<WarehousesStockView> WarehousesStockView { get; set; }
        public virtual DbSet<OrderDetailsView> OrderDetailsView { get; set; }
        public virtual DbSet<OrdersView> OrdersView { get; set; }
        public virtual DbSet<Address> Address { get; set; }
        public virtual DbSet<Producers> Producers { get; set; }
    
        [DbFunction("PubDBEntities", "customerStats")]
        public virtual IQueryable<customerStats_Result> customerStats(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<customerStats_Result>("[PubDBEntities].[customerStats](@customerId)", customerIdParameter);
        }
    
        [DbFunction("PubDBEntities", "getSaleStatistics")]
        public virtual IQueryable<getSaleStatistics_Result> getSaleStatistics(Nullable<int> days)
        {
            var daysParameter = days.HasValue ?
                new ObjectParameter("days", days) :
                new ObjectParameter("days", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getSaleStatistics_Result>("[PubDBEntities].[getSaleStatistics](@days)", daysParameter);
        }
    }
}
