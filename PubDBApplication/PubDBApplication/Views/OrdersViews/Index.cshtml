@model IEnumerable<PubDBApplication.Models.OrdersView>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Orders</h2>
<p>
   @Html.ActionLink("See Orders Details", "Index", "OrderDetailsViews")
</p>


<p>
    @Html.ActionLink("Create new incoming order", "CreateIncoming") |
    @Html.ActionLink("Create new outcoming order", "CreateOutcoming")
</p>
<table class="table">
    <tr><td colspan="7"><h4><b>Warehouse Incoming Orders (from Customers)</b></h4></td></tr>
    <tr>
        <th>
            ID
        </th>
        <th>
            Warehouse Name
        </th>
        <th>
            Pub Name
        </th>
        <th>
            Order Status
        </th>
        <th>
            Date
        </th>
        <th>
            Total Price
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Where(m => m.Incoming_Outcoming.Equals("Incoming")))
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.warehouse_name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.pub_name)
            </td>
            <td>
                @if (item.status.Equals("Completed"))
                {
                    <font color="green">
                        <b>@item.status</b>
                    </font>
                }
                else if (item.status.Equals("In Creation"))
                {
                    <font color="red">
                        @item.status
                    </font>
                }
                else if (item.status.Equals("In Realization"))
                {
                    <font color="blue">
                        @item.status
                    </font>
                }
                else
                {
                    <font color="black">
                        @item.status
                    </font>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.total)
            </td>

            <td>
                @if (item.status.Equals("In Creation"))
                {

                    // @Html.ActionLink("Submit", "Submit", new { id = item.id })

                    //  <font>|</font>
                }
                @if (item.status.Equals("In Realization"))
                {

                    //@Html.ActionLink("Send", "Send", new { id = item.id })

                    // <font>&nbsp;&nbsp;&nbsp;|</font>
                }

                @Html.ActionLink("Details", "Details", new { id = item.id })
                @if (!item.status.Equals("Completed"))
                {
                    <font>|</font>
                    @Html.ActionLink("Cancel", "Delete", new { id = item.id })
                }
            </td>
        </tr>
    }
    <tr><td colspan="7"></td></tr>
    <tr><td colspan="7"><h4><b>Warehouse Outcoming Orders (to Producers)</b></h4></td></tr>
    <tr>
        <th>
            ID
        </th>
        <th>
            Warehouse Name
        </th>
        <th>
            Producer Name
        </th>
        <th>
            Order Status
        </th>
        <th>
            Date
        </th>
        <th>
            Total Price
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Where(m => m.Incoming_Outcoming.Equals("Outcoming")))
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.warehouse_name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.producer_name)
            </td>
            <td>
                @if (item.status.Equals("Completed"))
                {
                    <font color="green">
                        <b> @item.status</b>
                    </font>
                }
                else if (item.status.Equals("In Creation"))
                {
                    <font color="red">
                        @item.status
                    </font>
                }
                else if (item.status.Equals("In Realization"))
                {
                    <font color="blue">
                        @item.status
                    </font>
                }
                else
                {
                    <font color="black">
                        @item.status
                    </font>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.total)
            </td>

            <td>
                @if (item.status.Equals("In Realization"))
                {
                    //  @Html.ActionLink("Collect", "Collect", new { id = item.id })
                    //<font>|</font>
                }

                @Html.ActionLink("Details", "Details", new { id = item.id })

                @if (!item.status.Equals("Completed"))
                {
                    <font>|</font>
                    @Html.ActionLink("Cancel", "Delete", new { id = item.id })
                }
            </td>
        </tr>
    }

</table>

@{
    <h3>Sale statistics</h3>
    <h4>Raport based only on completed orders</h4>
    <table class="table">
        <tr>
            <th>
                Order amounts:
            </th>
            <th>
                Min
            </th>
            <th>
                Avg per cust.
            </th>
            <th>
                Max
            </th>
            <th>
                Sum
            </th>
            <th>
                Served customers
            </th>
            <th>
                Sold products
            </th>
            <th>
                Most popular product
            </th>
        </tr>

        @using (var db = new PubDBApplication.Models.PubDBEntities())
        {

            var q = (from x in db.getSaleStatistics(1) select x).ToList();

            for (int i = 0; i < q.Count(); i++)
            {
                <tr>
                    <td><b>Last day</b></td>
                    <td>
                        @q[i].minOrderAmount.ToString("0.00")
                    </td>
                    <td>
                        @q[i].maxOrderAmount.ToString("0.00")
                    </td>
                    <td>
                        @q[i].avgOrderAmount.ToString("0.00")
                    </td>
                    <td>
                        @q[i].sumOrderAmount.ToString("0.00")
                    </td>
                    <td>
                        @q[i].servedCustomers
                    </td>
                    <td>
                        @q[i].totalSoldQuantity
                    </td>
                    <td>
                        @q[i].mostPopularProduct
                    </td>
                </tr>
            }

             q = (from x in db.getSaleStatistics(7) select x).ToList();


            for (int i = 0; i < q.Count(); i++)
            {
                <tr>
                    <td><b>Last week</b></td>
                    <td>
                        @q[i].minOrderAmount.ToString("0.00")
                    </td>

                    <td>
                        @q[i].avgOrderAmount.ToString("0.00")
                    </td>
                    <td>
                        @q[i].maxOrderAmount.ToString("0.00")
                    </td>
                    <td>
                        @q[i].sumOrderAmount.ToString("0.00")
                    </td>
                    <td>
                        @q[i].servedCustomers
                    </td>
                    <td>
                        @q[i].totalSoldQuantity
                    </td>
                    <td>
                        @q[i].mostPopularProduct
                    </td>
                </tr>
            }


             q = (from x in db.getSaleStatistics(30) select x).ToList();


            for (int i = 0; i < q.Count(); i++)
            {
                <tr>
                    <td><b>Last month</b></td>
                    <td>
                        @q[i].minOrderAmount.ToString("0.00")
                    </td>
                    <td>
                        @q[i].maxOrderAmount.ToString("0.00")
                    </td>
                    <td>
                        @q[i].avgOrderAmount.ToString("0.00")
                    </td>
                    <td>
                        @q[i].sumOrderAmount.ToString("0.00")
                    </td>
                    <td>
                        @q[i].servedCustomers
                    </td>
                    <td>
                        @q[i].totalSoldQuantity
                    </td>
                    <td>
                        @q[i].mostPopularProduct
                    </td>
                </tr>
            }

            q = (from x in db.getSaleStatistics(90) select x).ToList();

            for (int i = 0; i < q.Count(); i++)
            {
                <tr>
                    <td><b>Last quarter</b></td>
                    <td>
                        @q[i].minOrderAmount.ToString("0.00")
                    </td>
                    <td>
                        @q[i].maxOrderAmount.ToString("0.00")
                    </td>
                    <td>
                        @q[i].avgOrderAmount.ToString("0.00")
                    </td>
                    <td>
                        @q[i].sumOrderAmount.ToString("0.00")
                    </td>
                    <td>
                        @q[i].servedCustomers
                    </td>
                    <td>
                        @q[i].totalSoldQuantity
                    </td>
                    <td>
                        @q[i].mostPopularProduct
                    </td>
                </tr>
            }
        }
    </table>
}